name: 🚀 Smart Powershell Module Release Pipeline - SemanticVersioning

# 🎯 Triggers: Push to master branch (e.g., PR merge)
# 📋 Required Repository Variables:
# - UBUNTU_VERSION: Ubuntu runner version (e.g., "ubuntu-22.04")
# 📋 Required Repository Secrets:  
# - REPO_DISPATCH_TOKEN: Personal Access Token for cross-repo dispatch

on:
  push:
    branches: [ master, main ]

env:
  # 🌍 Global environment variables for consistency
  RELEASE_AUTHOR: "github-actions[bot]"
  RELEASE_EMAIL: "github-actions[bot]@users.noreply.github.com"

jobs:
  validate:
    name: 🔐 Security & 🧪 Tests
    runs-on: ${{ vars.UBUNTU_VERSION }}
    outputs:
      test-success: ${{ steps.tests.outputs.test-success }}
      total-tests: ${{ steps.tests.outputs.total-tests }}
      passed-tests: ${{ steps.tests.outputs.passed-tests }}
      failed-tests: ${{ steps.tests.outputs.failed-tests }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🛡️ Security scan - gitleaks
        uses: zricethezav/gitleaks-action@v2.3.9

      - name: 🛡️ Security scan - super-linter
        uses: github/super-linter/slim@v5
        env:
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_POWERSHELL: true

      - name: 🔧 Setup Clean Test Environment
        shell: pwsh
        run: |
          & "./.github/Scripts/Setup-CleanTestEnvironment.ps1" -TestPath "./Tests" -OutputPath "./TestResults.xml"

      - name: 🧪 Run Clean Pester Tests
        id: tests
        shell: pwsh
        run: |
          & "./.github/Scripts/Invoke-CleanPesterTests.ps1" -TestPath "./Tests" -OutputPath "./TestResults.xml"

      - name: 📋 Generate Test Summary  
        if: always()
        shell: pwsh
        run: |
          & "./.github/Scripts/Generate-TestSummary.ps1" -TotalTests '${{ steps.tests.outputs.total-tests }}' -PassedTests '${{ steps.tests.outputs.passed-tests }}' -FailedTests '${{ steps.tests.outputs.failed-tests }}' -SkippedTests '${{ steps.tests.outputs.skipped-tests }}' -Duration '${{ steps.tests.outputs.test-duration }}' -TestResultsPath '${{ steps.tests.outputs.test-results-path }}'

      - name: 📄 Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: TestResults.xml
          retention-days: 30

  dispatch:
    name: 🚀 Trigger Auto-Publish Pipeline
    runs-on: ubuntu-latest
    needs: validate
    if: needs.validate.outputs.test-success == 'true'
    steps:
      - name: 📤 Dispatch to auto-publish workflow
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.REPO_DISPATCH_TOKEN }}
          repository: GrexyLoco/K.PSGallery.AutoPublish
          event-type: publish-module
          client-payload: |
            {
              "module": "K.PSGallery.SemanticVersioning",
              "repository": "${{ github.repository }}",
              "ref": "${{ github.ref }}"
            }
